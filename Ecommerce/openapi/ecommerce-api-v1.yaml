openapi: 3.0.1
info:
    title: 'E-Commerce Platform API'
    description: 'RESTful API for a simple e-commerce platform'
    version: 1.0.0
servers:
    -
        url: 'http://localhost:9090'
        description: 'Generated server url'
tags:
    -
        name: OrderItems
        description: 'Operations related to order items.'
    -
        name: Orders
        description: 'Operations related to orders.'
    -
        name: Products
        description: 'Operations related to products.'
    -
        name: Session
        description: 'Customer session.'
paths:
    '/api/products/{id}':
        get:
            tags:
                - Products
            summary: 'Get a product by ID'
            operationId: getProductById
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/Product'
        put:
            tags:
                - Products
            summary: 'Update an existing product'
            operationId: updateProduct
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/Product'
        delete:
            tags:
                - Products
            summary: 'Delete a product by ID'
            operationId: deleteProduct
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
    '/api/orders/{id}':
        get:
            tags:
                - Orders
            summary: 'Get an order by ID'
            operationId: getOrderById
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/Orders'
        put:
            tags:
                - Orders
            summary: 'Update an existing order'
            operationId: updateOrder
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                type: object
        delete:
            tags:
                - Orders
            summary: 'Delete an order by ID'
            operationId: deleteOrder
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
    '/api/order-items/{id}':
        get:
            tags:
                - OrderItems
            summary: 'Get an order item by ID'
            operationId: getOrderItemById
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/OrderItem'
        put:
            tags:
                - OrderItems
            summary: 'Update an existing order item'
            operationId: updateOrderItem
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderItemDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/OrderItem'
        delete:
            tags:
                - OrderItems
            summary: 'Delete an order item by ID'
            operationId: deleteOrderItem
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
    /set-customer-name:
        post:
            tags:
                - Session
            summary: 'Set your session'
            operationId: setCustomerName
            parameters:
                -
                    name: customerName
                    in: query
                    required: true
                    schema:
                        type: string
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                type: string
    /api/products:
        get:
            tags:
                - Products
            summary: 'Get a list of all products'
            operationId: getAllProducts
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Product'
        post:
            tags:
                - Products
            summary: 'Create a new product'
            operationId: createProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/Product'
    /api/orders:
        get:
            tags:
                - Orders
            summary: 'Get a list of all orders'
            operationId: getAllOrders
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Orders'
        post:
            tags:
                - Orders
            summary: 'Create a new order'
            operationId: createOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostOrderDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/Orders'
    /api/order-items:
        get:
            tags:
                - OrderItems
            summary: 'Get a list of all order items'
            operationId: getAllOrderItems
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/OrderItem'
        post:
            tags:
                - OrderItems
            summary: 'Create a new order item'
            operationId: createOrderItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderItemDTO'
                required: true
            responses:
                200:
                    description: OK
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/OrderItem'
components:
    schemas:
        ProductDTO:
            type: object
            properties:
                name:
                    type: string
                price:
                    type: number
        Product:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                price:
                    type: number
        OrderDTO:
            type: object
            properties:
                orderDate:
                    type: string
                    format: date-time
                customerName:
                    type: string
        OrderItemDTO:
            type: object
            properties:
                productId:
                    type: string
                quantity:
                    type: integer
                    format: int32
        OrderItem:
            type: object
            properties:
                id:
                    type: string
                productId:
                    type: string
                totalPrice:
                    type: number
                customerName:
                    type: string
                order:
                    $ref: '#/components/schemas/Orders'
                quantity:
                    type: integer
                    format: int32
        Orders:
            type: object
            properties:
                id:
                    type: string
                orderItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrderItem'
                orderDate:
                    type: string
                    format: date-time
                customerName:
                    type: string
        PostOrderDTO:
            type: object
            properties:
                orderId:
                    type: string
                orderItemIds:
                    type: array
                    items:
                        type: string
